% Entries

% Quellen Felix

% Quelle 1
@article{Tom13,
  title    = {An exploration of technical debt},
  journal  = {Journal of Systems and Software},
  volume   = {86},
  number   = {6},
  pages    = {1498-1516},
  year     = {2013},
  issn     = {0164-1212},
  doi      = {https://doi.org/10.1016/j.jss.2012.12.052},
  url      = {https://www.sciencedirect.com/science/article/pii/S0164121213000022},
  author   = {Edith Tom and Aybüke Aurum and Richard Vidgen},
  keywords = {Technical debt, Code debt, Precedents, Outcomes, Benefits and drawbacks, Multivocal literature review}
}

% Quelle 2
@article{Cunningham92,
  author     = {Cunningham, Ward},
  title      = {The WyCash portfolio management system},
  year       = {1992},
  issue_date = {April 1993},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {4},
  number     = {2},
  issn       = {1055-6400},
  url        = {https://doi.org/10.1145/157710.157715},
  doi        = {10.1145/157710.157715},
  journal    = {SIGPLAN OOPS Mess.},
  month      = dec,
  pages      = {29–30},
  numpages   = {2}
}

% Quelle 3
@inproceedings{Brown10,
  author = {Brown, Nanette and Cai, Yuanfang and Guo, Yuepu and Kazman, Rick and Kim, Miryung and Kruchten, Philippe and Lim, Erin and MacCormack, Alan and Nord, Robert and Ozkaya, Ipek and Sangwan, Raghvinder and Seaman, Carolyn and Sullivan, Kevin and Zazworka, Nico},
  year   = {2010},
  month  = {11},
  pages  = {47-52},
  title  = {Managing technical debt in software-reliant systems},
  doi    = {10.1145/1882362.1882373}
}

% Quelle 4
@article{Ylihuumo16,
  title    = {How do software development teams manage technical debt? – An empirical study},
  journal  = {Journal of Systems and Software},
  volume   = {120},
  pages    = {195-218},
  year     = {2016},
  issn     = {0164-1212},
  doi      = {https://doi.org/10.1016/j.jss.2016.05.018},
  url      = {https://www.sciencedirect.com/science/article/pii/S016412121630053X},
  author   = {Jesse Yli-Huumo and Andrey Maglyas and Kari Smolander},
  keywords = {Technical debt, Technical debt management, Exploratory case study},
  abstract = {Technical debt (TD) is a metaphor for taking shortcuts or workarounds in technical decisions to gain short-term benefit in time-to-market and earlier software release. In this study, one large software development organization is investigated to gather empirical evidence related to the concept of technical debt management (TDM). We used the exploratory case study method to collect and analyze empirical data in the case organization by interviewing a total of 25 persons in eight software development teams. We were able to identify teams where the current strategy for TDM was only to fix TD when necessary, when it started to cause too much trouble for development. We also identified teams where the management had a systematic strategy to identify, measure and monitor TD during the development process. It seems that TDM can be associated with a similar maturity concept as software development in general. Development teams may raise their maturity by increasing their awareness and applying more advanced processes, techniques and tools in TDM. TDM is an essential part of sustainable software development, and companies have to find right approaches to deal with TD to produce healthy software that can be developed and maintained in the future.}
}

% Quelle 5

@online{Fowler09,
  author       = {Martin Fowler},
  year         = {2009},
  title        = {Technical Debt Quadrant},
  url          = {https://martinfowler.com/bliki/TechnicalDebtQuadrant.html},
  month        = oct,
  lastaccessed = {January 2, 2025}
}

% Quelle 6

@article{Jaspan23,
  author   = {Jaspan, Ciera and Green, Collin},
  journal  = {IEEE Software},
  title    = {Defining, Measuring, and Managing Technical Debt},
  year     = {2023},
  volume   = {40},
  number   = {3},
  pages    = {15-19},
  keywords = {},
  doi      = {10.1109/MS.2023.3242137}
}

% Quelle 7

@article{Li14,
  author  = {Li, Zengyang and Avgeriou, Paris and Liang, Peng},
  year    = {2014},
  month   = {12},
  pages   = {},
  title   = {A Systematic Mapping Study on Technical Debt and Its Management},
  journal = {Journal of Systems and Software},
  doi     = {10.1016/j.jss.2014.12.027}
}

% Quellen Oliver

@inproceedings{Seaman12,
  author    = {Seaman, Carolyn and Guo, Yuepu and Zazworka, Nico and Shull, Forrest and Izurieta, Clemente and Cai, Yuanfang and Vetrò, Antonio},
  booktitle = {2012 Third International Workshop on Managing Technical Debt (MTD)},
  title     = {Using technical debt data in decision making: Potential decision approaches},
  year      = {2012},
  volume    = {},
  number    = {},
  pages     = {45-48},
  keywords  = {Decision making;Portfolios;Software;Investments;USA Councils;Mathematical model;Maintenance engineering;technical debt;decision making;cost-benefit analysis;portfolio management;Analytic Hierarchy Process;options},
  doi       = {10.1109/MTD.2012.6225999}
}

  @article{Behutiye17,
  title    = {Analyzing the concept of technical debt in the context of agile software development: A systematic literature review},
  journal  = {Information and Software Technology},
  volume   = {82},
  pages    = {139-158},
  year     = {2017},
  issn     = {0950-5849},
  doi      = {https://doi.org/10.1016/j.infsof.2016.10.004},
  url      = {https://www.sciencedirect.com/science/article/pii/S0950584916302890},
  author   = {Woubshet Nema Behutiye and Pilar Rodríguez and Markku Oivo and Ayşe Tosun},
  keywords = {Technical debt, Agile software development, Technical debt management, Systematic literature review}
}

@article{Holvitie18,
  title    = {Technical debt and agile software development practices and processes: An industry practitioner survey},
  journal  = {Information and Software Technology},
  volume   = {96},
  pages    = {141-160},
  year     = {2018},
  issn     = {0950-5849},
  doi      = {https://doi.org/10.1016/j.infsof.2017.11.015},
  url      = {https://www.sciencedirect.com/science/article/pii/S0950584917305098},
  author   = {Johannes Holvitie and Sherlock A. Licorish and Rodrigo O. Spínola and Sami Hyrynsalmi and Stephen G. MacDonell and Thiago S. Mendes and Jim Buchan and Ville Leppänen},
  keywords = {Technical debt, Technical debt management, Agile software development, Practitioner survey}
}

@inproceedings{Codabux13,
  author    = {Codabux, Zadia and Williams, Byron},
  booktitle = {2013 4th International Workshop on Managing Technical Debt (MTD)},
  title     = {Managing technical debt: An industrial case study},
  year      = {2013},
  volume    = {},
  number    = {},
  pages     = {8-15},
  keywords  = {Software;Interviews;Organizations;Encoding;Taxonomy;Maintenance engineering;Training;technical debt Agile methods industrial case study;Scrum;semi-structure interviews},
  doi       = {10.1109/MTD.2013.6608672}
}

@inproceedings{Griffith14,
  author    = {Griffith, Isaac and Taffahi, Hanane and Izurieta, Clemente and Claudio, David},
  booktitle = {Proceedings of the Winter Simulation Conference 2014},
  title     = {A simulation study of practical methods for technical debt management in agile software development},
  year      = {2014},
  volume    = {},
  number    = {},
  pages     = {1014-1025},
  keywords  = {Software;Industries;Planning;Context;Focusing;Computational modeling;Agile software development},
  doi       = {10.1109/WSC.2014.7019961}
}

@article{Alves16,
  title    = {Identification and management of technical debt: A systematic mapping study},
  journal  = {Information and Software Technology},
  volume   = {70},
  pages    = {100-121},
  year     = {2016},
  issn     = {0950-5849},
  doi      = {https://doi.org/10.1016/j.infsof.2015.10.008},
  url      = {https://www.sciencedirect.com/science/article/pii/S0950584915001743},
  author   = {Nicolli S.R. Alves and Thiago S. Mendes and Manoel G. {de Mendonça} and Rodrigo O. Spínola and Forrest Shull and Carolyn Seaman},
  keywords = {Technical debt, Software maintenance, Software engineering, Systematic mapping}
}

@inproceedings{Ernst15,
  author    = {Ernst, Neil A. and Bellomo, Stephany and Ozkaya, Ipek and Nord, Robert L. and Gorton, Ian},
  title     = {Measure it? Manage it? Ignore it? software practitioners and technical debt},
  year      = {2015},
  isbn      = {9781450336758},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2786805.2786848},
  doi       = {10.1145/2786805.2786848},
  booktitle = {Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
  pages     = {50–60},
  numpages  = {11},
  keywords  = {Technical debt, architecture, survey},
  location  = {Bergamo, Italy},
  series    = {ESEC/FSE 2015}
}

@book{fowler2019refactoring,
  title={Refactoring: Improving the Design of Existing Code},
  author={Fowler, M.},
  isbn={9780134757599},
  lccn={2018950015},
  series={Addison-Wesley Object Technology},
  url={https://books.google.de/books?id=o69NtAEACAAJ},
  year={2019},
  publisher={Addison-Wesley}
}

@InProceedings{10.1007/978-3-540-85279-7_20,
  author="Moser, Raimund
and Abrahamsson, Pekka
and Pedrycz, Witold
and Sillitti, Alberto
and Succi, Giancarlo",
  editor="Meyer, Bertrand
and Nawrocki, Jerzy R.
and Walter, Bartosz",
  title="A Case Study on the Impact of Refactoring on Quality and Productivity in an Agile Team",
  booktitle="Balancing Agility and Formalism in Software Engineering",
  year="2008",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="252--266",
  abstract="Refactoring is a hot and controversial issue. Supporters claim that it helps increasing the quality of the code, making it easier to understand, modify and maintain. Moreover, there are also claims that refactoring yields higher development productivity -- however, there is only limited empirical evidence of such assumption. A case study has been conducted to assess the impact of refactoring in a close-to industrial environment. Results indicate that refactoring not only increases aspects of software quality, but also improves productivity. Our findings are applicable to small teams working in similar, highly volatile domains (ours is application development for mobile devices). However, additional research is needed to ensure that this is indeed true and to generalize it to other contexts.",
  isbn="978-3-540-85279-7"
}

@article{articlePerspectives,
  author = {Chen, Jie and Xiao, Junchao and Wang, Qing and Osterweil, Leon and Li, Mingshu},
  year = {2015},
  month = {06},
  pages = {1-40},
  title = {Perspectives on refactoring planning and practice: an empirical study},
  journal = {Empirical Software Engineering},
  doi = {10.1007/s10664-015-9390-8}
}

@inproceedings{inproceedingsHowWeRefactor,
  author = {Murphy-Hill, Emerson and Parnin, Chris and Black, Andrew},
  year = {2009},
  month = {05},
  pages = {},
  title = {How We Refactor, and How We Know It},
  volume = {38},
  journal = {IEEE Transactions on Software Engineering},
  doi = {10.1109/ICSE.2009.5070529}
}

@INPROCEEDINGS{6827119,
  author={Chen, Lianping and Babar, Muhammad Ali},
  booktitle={2014 IEEE/IFIP Conference on Software Architecture},
  title={Towards an Evidence-Based Understanding of Emergence of Architecture through Continuous Refactoring in Agile Software Development},
  year={2014},
  volume={},
  number={},
  pages={195-204},
  keywords={Computer architecture;Software;Software architecture;Organizations;Data analysis;Encoding;software architecture;agile software development component;empirical study},
  doi={10.1109/WICSA.2014.45}
}